# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  pull_request:
    branches: [ "main" , "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest
        
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    env:
      DB_DATABASE: myclassroom_test
      DB_USER: root
      DB_PASSWORD: root
      DB_HOST: 127.0.0.1

    steps:   
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: 'server/package-lock.json'
    - name: Install Dependencies
      run: npm install
      working-directory: './server'
      
    - name: Set up MySQL
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}
        mysql -e 'GRANT ALL PRIVILEGES ON ${{ env.DB_DATABASE }}.* TO '${{ env.DB_USER }}'@'{{ env.DB_HOST }}';
        mysql -e 'SHOW DATABASES;' -uroot -proot
      working-directory: './server'

    - name: Set Up Database
      run: npx sequelize-cli db:migrate --env test
      working-directory: './server'

    - name: Seed Database 
      run: npx sequelize-cli db:seed:all --env test
      working-directory: './server'
    
    - name: Run Tests
      run: npm test
      working-directory: './server'
